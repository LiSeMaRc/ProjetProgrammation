import sys 
sys.path.append("swap_puzzle/")
import unittest 
from grid import Grid
from solver import Solver

class Test_a_star(unittest.TestCase):

    def test_grid0(self):
        grid = Grid.grid_from_file("input/grid0.in")
        list=Solver.a_star(grid)
        grid.swap_seq(list)
        self.assertTrue(grid.is_sorted())
        self.assertEqual(len(list),2)

    def test_grid1(self):
        grid = Grid.grid_from_file("input/grid1.in")
        list=Solver.a_star(grid)
        grid.swap_seq(list)
        self.assertTrue(grid.is_sorted())
        self.assertEqual(len(list),1)
    
    def test_grid2(self):
        grid = Grid.grid_from_file("input/grid2.in")
        list=Solver.a_star(grid)
        grid.swap_seq(list)
        self.assertTrue(grid.is_sorted())
        self.assertEqual(len(list),4)
    
    def test_grid3(self):
        grid=Solver(4,4,[[7,2,4,3],[6,5,8,1],[9,10,11,16],[14,13,15,12]])
        list=Solver.a_star(grid)
        grid.swap_seq(list)
        self.assertTrue(grid.is_sorted())




if __name__ == '__main__':
    unittest.main()